@startuml StudentsMerge
skinparam headerFontSize 40
skinparam HeaderFontColor #000000
skinparam HeaderFontStyle bold
header Setup Neighbouring Rooms, each with one Student and an Item
hide footbox

participant M as "Main"
activate M

create R1 as "room1 : Room"
M --> R1 :  <<create>>
activate R1
create R1I as "room1Inventory : Inventory"
R1 --> R1I --: <<create>>

create R2 as "room2 : Room"
M --> R2 :  <<create>>
activate R2
create R2I as "room2Inventory : Inventory"
R2 --> R2I --: <<create>>

create D as "door : Door"
M --> D :  <<create>>
create S1 as "student1 : Student"
M --> S1 ++: <<create>>
create S1S as "student1State : StudentActions"
S1 --> S1S : <<create>>
create S1I as "student1Inventory : Inventory"
S1 --> S1I : <<create>>
create S1D as "student1Defense : DefaultDefense"
S1 --> S1D --: <<create>>
create S2 as "student2 : Student"
M --> S2 ++: <<create>>
create S2S as "student2State : StudentActions"
S2 --> S2S : <<create>>
create S2I as "student2Inventory : Inventory"
S2 --> S2I : <<create>>
create S2D as "student2Defense : DefaultDefense"
S2 --> S2D --: <<create>>

create B as "beer : Beer"
M --> B : <<create>>
create T as "tvsz : Tvsz"
M --> T : <<create>>

M -> R1 ++: addItem(beer)
R1 -> R1I ++: addItem(beer)
return true
return

M -> R2 ++: addItem(tvsz)
R2 -> R2I ++: addItem(tvsz)
return true
return

M -> S1 ++ : teleport(room1, false)
S1 -> R1 ++ : enter(student1, false)
return true
return true

M -> S2 ++ : teleport(room2, false)
S2 -> R2 ++ : enter(student2, false)
return true
return true
@enduml

