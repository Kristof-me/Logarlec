@startuml ProfessorWet
header Professor gets wet
hide footbox

participant Student as "student : Student"
participant Sponge as "sponge : Sponge"
participant Action as "studentActions : StudentActions"
participant Inventory as "studentInventory : Inventory"
participant Room as "room1 : Room"
participant Professor as "professor : Professor"

ref over Student, Professor : Setup professor wet

-> Student++ : use(sponge)
Student -> Action ++ : use(sponge)
Action -> Sponge++ : use(student)

create RoomEffect as "wetEffect : WetEffect"
Sponge --> RoomEffect: <<create>>
Sponge -> Room++: addEffect(wetEffect)
Room -> RoomEffect ++ : addEffect(student)
RoomEffect -> Student++: acceptEffect(wetEffect, null)
Student -> RoomEffect++: applyEffect(student)

return
return
return


Room -> RoomEffect++: addEffect(professor)
RoomEffect -> Professor++: acceptEffect(wetEffect, null)
Professor -> RoomEffect++: applyEffect(professor)
create State as "stunnedStep : StunnedStep"
RoomEffect --> State: <<create>>
RoomEffect -> Professor++: setActionState(stunnedStep)
' Van-e itt setNextState? Vagy az hogy működik, vagy mi? xd
return
return
return
return

return
return
return
return

@enduml